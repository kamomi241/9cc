#!/bin/bash
assert() {
  expected="$1"
  input="$2"

  ./9cc "$input" > tmp.s
  cc -o tmp tmp.s
  ./tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}

assert 0 "0;"
assert 42 "42;"
assert 21 "5+20-4;"
assert 41 " 12 + 34 - 5 ;"
assert 47 "5+6*7;"
assert 15 "5*(9-6);"
assert 4 "(3+5)/2;"
assert 10 "-10+20;"
assert 10 "- -10;"
assert 10 "- - +10;"

assert 0 "0==1;"
assert 1 "42==42;"
assert 1 "0!=1;"
assert 0 "42!=42;"

assert 1 "0<1;"
assert 0 "1<1;"
assert 0 "2<1;"
assert 1 "0<=1;"
assert 1 "1<=1;"
assert 0 "2<=1;"

assert 1 "1>0;"
assert 0 "1>1;"
assert 0 "1>2;"
assert 1 "1>=0;"
assert 1 "1>=1;"
assert 0 "1>=2;"

assert 14 "a = 3;
b = 5 * 6 - 8;
a + b / 2;"
assert 6 "foo = 1;
bar = 2 + 3;
foo + bar;"
assert 14 "a = 3;
b = 5 * 6 - 8;
return a + b / 2;"
assert 5 "return 5;
return 8;"

assert 3 "a = 3;
if (a == 3) return a;
return 5;
"
assert 5 "
if (1 == 3) return 1;
return 5;
"
assert 3 "a = 3;
if (a == 1) return 1;
else return 3;
return 5;
"

assert 3 " a = 0;
while (a < 3) a = a +1;
return a;
"

assert 0 "
for(a = 0;a < 4;a = a + 1)
return 0;
"

assert 20 "a = 0;
for (b = 0; b < 10;b = b + 1) {
 a = a + 1;
 a = a + 1;
} return a;
"
assert 0 "foo();"

echo OK