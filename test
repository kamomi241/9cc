#!/bin/bash
assert() {
  expected="$1"
  input="$2"

  ./9cc "$input" > tmp.s
  cc -c foo.c
  cc -o tmp tmp.s foo.o
  ./tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}

assert 42 "int main() {return 42;}"
assert 41 "int main() {12 + 34 - 5 ;}"
assert 15 "int main() {5*(9-6);}"
assert 4 "int main() {(3+5)/2;}"
assert 10 "int main() {-10+20;}"
assert 10 "int main() {- - +10;}"

assert 0 "int main() {0==1;}"
assert 1 "int main() {42==42;}"
assert 0 "int main() {42!=42;}"

assert 1 "int main() {0<=1;}"

assert 0 "int main() {1>=2;}"

assert 14 "int main() {
  int a;
  int b;
  a = 3;
b = 5 * 6 - 8;
a + b / 2;}
"
assert 6 "int main() {
  int foo;
  int bar;
  foo = 1;
bar = 2 + 3;
foo + bar;}
"
assert 14 "int main() {int a = 3;
int b = 5 * 6 - 8;
return a + b / 2;}
"
assert 5 "int main() {return 5;
return 8;}
"

assert 3 "int main() {int a = 3;
if (a == 3) return a;
return 5;}
"
assert 5 "int main() {
if (1 == 3) return 1;
return 5;}
"
assert 3 "int main() {int a = 3;
if (a == 1) return 1;
else return 3;
return 5;}
"

assert 3 "int main() {int a = 0;
while (a < 3) a = a +1;
return a;}
"

assert 0 "int main() {
for(int a = 0;a < 4;a = a + 1)
return 0;}
"

assert 20 "int main() {int a = 0;
for (int b = 0; b < 10;b = b + 1) {
 a = a + 1;
 a = a + 1;
} return a;}
"

assert 12 "int main() {int foo(3,4,5);}"

assert 3 "int main() {int x = 3;
int y = &x;
return *y;}
"
assert 3 "int main() {
  int x = 3;
int y = 5;
int z = &y + 8;
return *z;}
"

assert 3 "int main() {
  int x;
  int *y;
  y = &x;
  *y = 3;
  return x;}
"

assert 4 "int main() {
  int *p;
  int alloc(&p, 1, 2, 4, 8);
  int *q;
  q = p + 2;
  return *q;
}"
assert 8 "int main() {
  int *p;
  int alloc(&p, 1, 2, 4, 8);
  int *q;
  q = p + 3;
  return *q;
}"

assert 4 "int main() {
  int x;
  sizeof(x);
}"
assert 8 "int main() {
  int *y;
  sizeof(y);
}"
assert 4 "int main() {
  sizeof(sizeof(1));
}"
echo OK