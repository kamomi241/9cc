#!/bin/bash
assert() {
  expected="$1"
  input="$2"

  ./9cc "$input" > tmp.s
  cc -c foo.c
  cc -o tmp tmp.s foo.o
  ./tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}

assert 42 "main() {return 42;}"
assert 41 "main() {12 + 34 - 5 ;}"
assert 15 "main() {5*(9-6);}"
assert 4 "main() {(3+5)/2;}"
assert 10 "main() {-10+20;}"
assert 10 "main() {- - +10;}"

assert 0 "main() {0==1;}"
assert 1 "main() {42==42;}"
assert 0 "main() {42!=42;}"

assert 1 "main() {0<=1;}"

assert 0 "main() {1>=2;}"

assert 14 "main() {a = 3;
b = 5 * 6 - 8;
a + b / 2;}
"
assert 6 "main() {foo = 1;
bar = 2 + 3;
foo + bar;}
"
assert 14 "main() {a = 3;
b = 5 * 6 - 8;
return a + b / 2;}
"
assert 5 "main() {return 5;
return 8;}
"

assert 3 "main() {a = 3;
if (a == 3) return a;
return 5;}
"
assert 5 "main() {
if (1 == 3) return 1;
return 5;}
"
assert 3 "main() {a = 3;
if (a == 1) return 1;
else return 3;
return 5;}
"

assert 3 "main() {a = 0;
while (a < 3) a = a +1;
return a;}
"

assert 0 "main() {
for(a = 0;a < 4;a = a + 1)
return 0;}
"

assert 20 "main() {a = 0;
for (b = 0; b < 10;b = b + 1) {
 a = a + 1;
 a = a + 1;
} return a;}
"

assert 12 "main() {foo(3,4,5);}"

assert 3 "main() {x = 3;
y = &x;
return *y;}
"
assert 3 "main() {
  x = 3;
y = 5;
z = &y + 8;
return *z;}
"
echo OK